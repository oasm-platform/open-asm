version: "3"
dotenv: ["core-api/.env", "worker/.env", "console/.env"]
includes:
  api:
    taskfile: ./core-api/taskfile.yml
    dir: ./core-api
  console:
    taskfile: ./console/taskfile.yml
    dir: ./console
  worker:
    taskfile: ./worker/taskfile.yml
    dir: ./worker

tasks:
  dev:
    deps:
      - api:dev
      - console:dev
      # - |
      #   echo "Waiting for API to be ready..."
      #   until curl -s http://localhost:$PORT > /dev/null; do
      #     sleep 1
      #   done
      #   echo "API is up! Starting worker..."
      # - task worker:dev

  build:
    deps:
      - api:build
      - console:build
  prod:
    deps:
      - api:prod
  install:
    cmds:
      - task: api:install
      - task: console:install
      - task: worker:install
  gen-api:
    cmd: npx swagger-typescript-api generate -n api.ts -p ./open-api/open-api.json -o ./worker/services/core-api --route-types --axios --extract-enums --unwrap-response-data --default-response any --module-name-index 1000
  docker-compose:
    cmds:
      - |
        docker compose --env-file ./core-api/.env up -d --build --force-recreate --scale worker=3
  init:
    cmds:
      - node -e "require('fs').copyFileSync('core-api/example.env', 'core-api/.env')"
      - node -e "require('fs').copyFileSync('worker/example.env', 'worker/.env')"
      - node -e "require('fs').copyFileSync('console/example.env', 'console/.env')"
      - docker compose up -d postgres --force-recreate
    deps:
      - install
      - worker:tools
