version: "3.8"

services:
  core-api:
    container_name: core-api
    build:
      context: .
      dockerfile: ./core-api/Dockerfile
    networks:
      - oasm
    env_file:
      - ./core-api/.env
    ports:
      - "6276:6276"
    restart: "always"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./open-api:/open-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6276"]
      interval: 1s
      timeout: 5s
      retries: 10

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile
    environment:
      - API=http://core-api:6276/
      - API_KEY=change_me
      - MAX_JOBS=10
    networks:
      - oasm
    restart: "always"
    depends_on:
      core-api:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    env_file:
      - ./core-api/.env
    environment:
      POSTGRES_USER: "${POSTGRES_USERNAME:-postgres}"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGUSER: "${POSTGRES_USERNAME:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD:-postgres}"
    volumes:
      - pgdata:/var/lib/postgresql/data:rw
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - oasm
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10

volumes:
  pgdata:

networks:
  oasm:
    driver: bridge
