import { BaseEntity } from '@/common/entities/base.entity';
import { Severity } from '@/common/enums/enum';
import { Asset } from '@/modules/assets/entities/assets.entity';
import { JobHistory } from '@/modules/jobs-registry/entities/job-history.entity';
import { Tool } from '@/modules/tools/entities/tools.entity';
import { ApiProperty } from '@nestjs/swagger';
import { Column, Entity, JoinColumn, ManyToOne } from 'typeorm';

@Entity('vulnerabilities')
export class Vulnerability extends BaseEntity {
  @ApiProperty()
  @Column()
  name: string;

  @ApiProperty()
  @Column({ nullable: true })
  description: string;

  @ApiProperty()
  @Column({ enum: Severity, default: Severity.INFO })
  severity: Severity;

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  tags: string[];

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  references?: string[];

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  seeAlso?: string[];

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  authors?: string[];

  @ApiProperty()
  @Column({ nullable: true })
  affectedUrl?: string;

  @ApiProperty()
  @Column({ nullable: true })
  ipAddress?: string;

  @ApiProperty()
  @Column({ nullable: true })
  host?: string;

  @ApiProperty()
  @Column({ nullable: true })
  port?: string;

  @ApiProperty()
  @Column({ nullable: true })
  cvssMetric?: string;

  @ApiProperty()
  @Column({ nullable: true, type: 'float' })
  cvssScore?: number;

  @ApiProperty()
  @Column({ nullable: true, type: 'float' })
  epssScore?: number;

  @ApiProperty()
  @Column({ nullable: true, type: 'float' })
  vprScore?: number;

  @ApiProperty()
  @Column({ nullable: true })
  cveId?: string;

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  cweId?: string[];

  @ApiProperty()
  @Column('text', { nullable: true })
  cveUrl?: string;

  @ApiProperty()
  @Column('text', { nullable: true })
  cweUrl?: string;

  @ApiProperty()
  @Column('text', { nullable: true })
  solution?: string;

  @ApiProperty()
  @Column({ nullable: true })
  extractorName?: string;

  @ApiProperty()
  @Column('text', { array: true, nullable: true })
  extractedResults?: string[];

  @ApiProperty()
  @Column('datetime', { nullable: true })
  publicationDate?: Date;

  @ApiProperty()
  @Column('datetime', { nullable: true })
  modificationDate?: Date;

  @ApiProperty({ type: () => Tool })
  @ManyToOne(() => Tool, (tool) => tool.vulnerabilities)
  tool: Tool;

  @ManyToOne(() => Asset, (asset) => asset.vulnerabilities)
  asset: Asset;

  @Column({ nullable: true })
  filePath?: string;

  @Column({ type: 'varchar', nullable: true })
  jobHistoryId: string;

  @ManyToOne(() => JobHistory, (jobHistory) => jobHistory.vulnerabilities, {
    onDelete: 'CASCADE',
  })
  @JoinColumn({ name: 'jobHistoryId' })
  jobHistory?: JobHistory;

  @Column({ default: false })
  isArchived: boolean;
}
